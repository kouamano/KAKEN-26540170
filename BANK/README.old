



############################
#===== ここから旧手順 =====#
############################

#[不採用][old]TASK(2): 既知バイオリソース名・機関名の検索とパターン定義(NBRP) ACKの処理にバグ(20150728)
#3段階の検索を行なう:1.機関名が出現する行を抽出(20150708) 2.さらにバイオリソース名が出現する行を抽出(20150710) 3.抽出結果に対して、機関名ポジションとバイオリソース名ポジションを検索
##TASK(2.1)既知機関名(NBRP)出現articleの抽出
###TASK(2.1.1)検索タームの調整
- 検索ターム(元): /BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt
- エスケープコマンド: escape_char sf=/BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt lf=/usr/local/var/perl_esc.list > /BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt.esc
###TASK(2.1.2)既知機関名inACK
- 検索対象: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
 3カラムめに対して検索
- 検索ターム(スケープ): /BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt.esc
- プログラム: /home/kamano/gitsrc/utility/hit_least.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/hit_Org_from_ACK.sh
- 結果(20150708): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_Org_from_ACK.tsv
###TASK(2.1.3)既知機関名inMat
- 検索対象: /BANK/PMC/20140724/elements/MERGED/allmaterials/*.cont
 2カラムめに対して検索
- 検索ターム(スケープ済み): /BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt.esc
- プログラム: /home/kamano/gitsrc/utility/hit_least.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/hit_Org_from_Mat.sh
- 結果(20150708): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_Org_from_Mat.au.tsv
##TASK(2.2)既知バイオリソース名(NBRP)出現articleの抽出
###TASK(2.2.1)検索タームの調整
- 検索ターム(元): /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3
- 検索ターム(UTF8)を数値文字参照に変換: utf8_to_ncr resterms.sort.uniq.select_3 > resterms.sort.uniq.select_3.ncr
- perl検索用にエスケープ: escape_char sf=/BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr lf=/usr/local/var/perl_esc.list > /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr.esc
###TASK(2.2.2)既知バイオリソース名inACK with 既知機関名
- 検索対象: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_Org_from_ACK.tsv
- 検索ターム(エスケープ): /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr.esc
- プログラム: /home/kamano/gitsrc/utility/hit_least.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/hit_ResOrg_from_ACK.sh
- 結果(20150710): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv
###TASK(2.2.3)既知バイオリソース名inMat with 既知機関名
- 検索対象: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_Org_from_Mat.a[a-u].tsv
- 検索ターム(エスケープ済み): /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr.esc
- プログラム: /home/kamano/gitsrc/utility/hit_least.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/hit_ResOrg_from_Mat.sh
- 結果(20150728): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.au.tsv
##TASK(2.3)既知機関名のポジション決定(20150711)
###TASK(2.3.1)既知機関名position in ACK
- 検索対象(XMLのみ): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv.XMLonly
 /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv より第3カラムのみを抽出したもの
-- スクリプト: awk -F '	' '{print $3}' /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv > /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv.XMLonly
- 検索ターム(エスケープなし): /BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt.sort.uniq
- プログラム: match_position
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/extract_reg_Org_from_ACK.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Org_from_ACK
###TASK(2.3.2)既知機関名position in Mat
- 検索対象(XMLのみ): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.a[a-u].tsv.XMLonly
 /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.a[a-u].tsv より第2カラムのみを抽出したもの
-- スクリプト: 
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015;
for alf in aa ab ac ad ae af ag ah ai aj ak al am an ao ap aq ar as at au; do awk -F '	' '{print $2}' hit_ResOrg_from_Mat.$alf.tsv > hit_ResOrg_from_Mat.$alf.tsv.XMLonly; done
- 検索ターム(エスケープなし): /BANK/Organization/NBRP_2015/17topOrgNameSearchTerm.txt.sort.uniq
- プログラム: match_position
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/extract_reg_Org_from_Mat.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Org_from_Mat.au
##TASK(2.4)既知バイオリソース名のポジション決定(20150711)
###TASK(2.4.1)既知バイオリソース名position in ACK
- 検索対象(XMLのみ): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv.XMLonly
- 検索ターム(エスケープなし): /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr
- プログラム: match_position
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/extract_reg_Res_from_ACK.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Res_from_ACK
###TASK(2.4.2)既知バイオリソース名position in Mat
- 検索対象(XMLのみ): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.a[a-u].tsv.XMLonly
- 検索ターム(エスケープなし): /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr
- プログラム: match_position
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/extract_reg_Res_from_Mat.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Res_from_Mat.au
##TASK(2.5) 既知機関名position結果、既知バイオリソース名position結果、ターゲットセンテンスの組(まとめ)を作る
###TASK(2.5.1) in ACK
- 対象(ソース): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv
- 対象(機関名): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Org_from_ACK
- 対象(バイオリソース名):  /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Res_from_ACK
- プログラム: /home/kamano/gitsrc/utility/paste_Res_Org_Src.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/pasteSrcOrgRes_ACK.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv+Org+Res
###TASK(2.5.2) in Mat
- 対象(ソース): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.au.tsv
- 対象(機関名): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Org_from_Mat.au
- 対象(バイオリソース名):  /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Res_from_Mat.au
- プログラム: paste_Res_Org_Src.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/pasteSrcOrgRes_Mat.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.au.tsv+Org+Res
###TASK(2.5.3) まとめより無理やりカラーテキストHTMLに変換
- 対象: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/*.tsv+Org+Res
- プログラム: /home/kamano/gitsrc/XMLOP/SrcOrgRes_to_html.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/SrcOrgRes_to_html.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/*.tsv+Org+Res.html
###TASK(2.5.4) まとめよりOrg Resが双方出現するセンテンスを選択、無理やりカラーテキストHTMLに変換
- 対象: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/*.tsv+Org+Res
- プログラム: /home/kamano/gitsrc/XMLOP/SrcOrgRes-Sel_to_html.pl
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/SrcOrgRes-Sel_to_html.sh
(20150728)
##TASK(2.6) リソースネームリストの修正
- リソースネームファイルコピー: cp /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3 /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.org
- リソースネーム修正: vim /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3
##TASK:Loop(2.7) (バイオリソース名の調整):2
##TASK(2.2)既知バイオリソース名(NBRP)検索
###TASK(2.2.1)既知バイオリソース名inACK with 既知機関名
- 検索ターム(UTF8)を数値文字参照に変換: utf8_to_ncr /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3 > /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr
- perl検索用にエスケープ: escape_char sf=/BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr lf=/usr/local/var/perl_esc.list > /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr.esc
- スクリプト(4min): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/hit_ResOrg_from_ACK.sh
- 結果(20150715): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv
###TASK(2.2.2)既知バイオリソース名inMat with 既知機関名
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/hit_ResOrg_from_Mat.sh
- 結果(20150715): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.au.tsv
##TASK(2.4)既知バイオリソース名のポジション決定(20150716)
###TASK(2.4.1)既知バイオリソース名position in ACK
- スクリプト(35min): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/extract_reg_Res_from_ACK.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Res_from_ACK
###TASK(2.4.2)既知バイオリソース名position in Mat 
- スクリプト(90min): /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/extract_reg_Res_from_Mat.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/extract_reg_Res_from_Mat.au
###TASK(2.5) 既知機関名position結果、既知バイオリソース名position結果、ターゲットセンテンスの組(まとめ)を作る
###TASK(2.5.1) in ACK
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/pasteSrcOrgRes_ACK.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_ACK.tsv+Org+Res
###TASK(2.5.2) in Mat
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/pasteSrcOrgRes_Mat.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.au.tsv+Org+Res
###TASK(2.5.3) まとめより無理やりカラーテキストHTMLに変換
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/exec_command/SrcOrgRes_to_html.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/hit_ResOrg_from_Mat.au.tsv+Org+Res.html
###TASK(2.5.4) まとめよりOrg Resが双方出現するセンテンスを選択、無理やりカラーテキストHTMLに変換 (20150722)
##TASK(2.6) 検索の検討
- 検討するタームのリスト:
-- /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/doc/res.kentou.terms
- 削除するタームのリスト:
-- /BANK/PMC/20140724/Matching/BioResource/Organization/NBRP_2015/doc/res.del.terms
- 新しく追加するターム(リテラル)(match_position):
-- /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.additional.ncr
 /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3.ncr と cat して検索。
- [未定]新しく追加するターム(正規表現)(match_position_RE.pl):
-- /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.additional.RE
 別検索。
##TASK(2.7) リソースネームリストの修正
- リソースネーム修正: vim /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.sort.uniq.select_3
- [未定]リソースネーム正規表現検索リスト: /BANK/BioResource/Organization/NBRP_2015/user-data/resterms.additional.RE
##End:Loop



#TASK(check-correct): 正解データに対して機関名検索を行いカバレッジを確認 (20150123)
## 1. 対象ファイルの決定
## XMLと正解データのPMIDをマッチさせる
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/ALL.pmidVSfilename.sort.uniq.in_pmc.hit
## 2. 対象ファイルを抜きだし(リンク作成)
- プログラム: ln
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/XML/exec_command/mklink.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/XML/
## 3 検索
### 3.1 対象ファイルに対して機関名をgrep検索(RIKEN BRC)
- プログラム: grep
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/exec-command/grep-orgnames.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/grep-orgnames.out
### 3.2 対象ファイルに対して機関名をgrep検索(RIKEN)
- プログラム: grep
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/exec-command/grep-RIKEN.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/grep-RIKEN.out
## 4 文献チェック
- チェックすべきPrimary番号リスト(利用者成果エクセル表に対応): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/artgrNoHitPrimaryInPMC.tsv
- 上記チェック文献リストの根拠(作業記録): /BANK/BioResource/Organization/RIKEN-BRC_2012/user-data/UserArticles.nb



#TASK(1 ver.1): 既知リソース名・機関名の決定と検索タームの決定 (8機関を決定完了)
#THEME[リソース名共出現解析][kaken-26540170]
#大型機関に絞って行なうこととする。
##TASK(1.0): 対象機関の決定 -> 8機関に決定
- ファイル: /BANK/Organization/_ALL_/organization-name/8orgs.name.list
- idと検索タームのペアを作る: pair.pl
- id vs. 検索ターム: 8orgs.name.idVSterms
- 検索タームのみ: 8orgs.name.terms
##条件: 大学以外、もしくはセンター
##方法: インターネット検索
##アスタリスク(*)が今回の対象
日本:
-* riken brc
-* nig
-* nite nbrc
-* jcrb
- がん研究センター(biobank:2011)
- 循環器病研究センター(biobank:2011)
- 精神・神経医療研究センター(biobank:2011)
- 国際医療研究センター(biobank:?)
- 生育医療研究センター(biobank:?)
- 長寿医療研究センター(biobank:?)
海外:
-* dsmz
-* atcc
-* addgene
-* jackson lab
##TASK(1.1): 対象リソース名の決定:8機関からさらに十分なリソースリストが得られる機関に限定(未完)。
###TASK(1.1.1): RIKEN-BRC
- リソース
-- 対象: RIKEN BRC (利用者成果)
-- リソース名: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.rev
-- 検索ターム: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
- 機関名
-- 検索ターム: /BANK/Organiztion/RIKEN-BRC_2012/organization-name/org.name.only
###TASK(1.1.2): JCRB
- リソース
-- 対象: JCRB (オンラインカタログ)
-- リソース名: /BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv
-- 検索ターム: /BANK/BioResource/Organization/JCRB_2014/catalogue/All.name.sort.uniq.tsv.esc.rev
- 機関名
-- 検索ターム: /BANK/Organiztion/JCRB_2014/organization-name/org.name.only
###TASK(1.1.3): NITE-NBRC
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/NITE-NBRC_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/NITE-NBRC_2014/organization-name/org.name.only
###TASK(1.1.4): DSMZ
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/DSMZ_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/DSMZ_2014/organization-name/org.name.only
###TASK(1.1.5): WDCM
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/WDCM_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/WDCM_2014/organization-name/org.name.only
###TASK(1.1.6): ATCC
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/ATCC_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/ATCC_2014/organization-name/org.name.only




#TASK(3): 既知機関名の検索 THEME[kaken-26540170]
##TASK(3.1): aff領域より機関名検索(8機関)
### 1. aff エレメントの抽出(石川氏)
- 結果ファイル: /BANK/PMC/20140724/elements/aff/PMC-AFF-v1.tsv
### 2. 機関名(8機関)検索(石川氏)(20141225)
- 検索ターム: /BANK/Organization/_ALL_/organization-name/8orgs.name.terms
- 結果ファイル:  /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/aff/PMC-AFF-plain-10_ORG.txt
##TASK(3.2): ack領域より機関名検索
### 1. acknowledgement エレメントの抽出(石川氏)
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
### 2. 機関名検索
### 2.1 ack領域から5機関名を検索(天野)(完了)
cd /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/5orgs.name.only
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
- スクリプト:
 /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/exec_command/5orgs_in_ack.sh
 /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/exec_command/5org_extract_hit.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/5orgs_in_ack.hit
- PMID付きPMC-BRC利用者成果(118件) AND 結果: (30件) : /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/pmid_5orgs_AND_BRCuser_inACK
### 2.2 ack領域から8機関名を検索(石川氏)(20150306)
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/8orgs.name.terms
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/acknowledgement/8orgs-OUTPUT

##TASK(3.3): material領域より機関名を検索(石川氏)(20150306)
- 対象領域: /BANK/PMC/20140724/elements/MERGED/Materials/au.merge-reg-material.cont.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/8orgs.name.terms
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/MERGED/Materials/OUTPUT2

##TASK(3.4): 全PMC-XMLより機関名を検索(20140801 完了)
###TASK(3.4.1) RIKEN-BRC :
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/RIKEN-BRC_2012/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.2) JCRB :
###既知機関名のリスト検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/JCRB_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.3): NITE-NBRC
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/NITE-NBRC_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.4): DSMZ
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/DSMZ_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.5): WDCM
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/WDCM_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.6): ATCC
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/ATCC_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
##===ここまで完了===##



#TASK(2): 既知リソース名検索:!!TASK(3)よりあとに行なう!!
##TASK(2.1): RIKEN-BRC
##THEME[リソース名共出現解析][kaken-26540170]
### 0. リソース名検索のためのリソース名 vs. リソース番号リストを作成する(NEW)
- 対象: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/riyousha_seika.2012.xls
- プログラム: Mathematica
- スクリプト: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/all.seika-matome.nb
- 検索ターム
-- Mus: リソース番号 + リソース名
-- Plt: リソース番号のみ
-- Cell: リソース番号 + リソース名
-- Mic: リソース番号のみ
-- DNA: リソース番号のみs
-- すべてまとめたファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name
-- ソートユニークエスケープした検索タームファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc
### 1. 検索(タグをKOしない:不採択)
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
-- 例: match_lines.pl sf=/BANK/PMC/20140724/elements/MERGED/Materials/au.merge-reg-material.cont.tsv qf=/BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc > res4
- スクリプト(1): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matchResNameLines_merge-reg-material.au.sh
- スクリプト(2)(20150226実行): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matchResNameLines_merge-reg-material.All.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/au.resName_merge-reg-material.cont.res
- 結果の加工(リソース名のみを抜き出す)
-- スクリプト: awk -F"<  >" '{print $2}' aa.resName_merge-reg-material.cont.res > aa.resNameOnly_merge-reg-material
-- すべてのファイルをまとめる: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matome_resNameOnly.sh
-- まとめ結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/All.resNameOnly_merge-reg-material
- 結果の加工(リソース名のみ、タブ区切り、最終的に欲しい形の結果): All.resNameOnly_merge-reg-material.tab
-- 上記の実行スクリプト: sed -e "s/^               //" All.resNameOnly_merge-reg-material > All.resNameOnly_merge-reg-material.tab
- 出現リソース名と対応する論文名のリスト
-- スクリプト: awk -F'   ' '{print $1"   "$2}' aa.resName_merge-reg-material.cont.res > aa.artName_merge-reg-material
-- スクリプト: matome_artNameOnly.sh
### 2. 検索(タグをKO:採択)
#### 2.0-a 検索ソースのタグをKO(スペース置き換え)
- プログラム: /home/kamano/gitsrc/XMLOP/tag-KO
- スクリプト:
cd /BANK/PMC/20140724/elements/MERGED/Materials
/home/kamano/gitsrc/XMLOP/tag-KO if=aa.merge-reg-material.cont.tsv > aa.merge-reg-material.cont.tsv.KO
#### 2.0-b 検索ソースのタグをKO(シュリンク)
#### <[^<>]*>のパターンを<数字>のパターンに変換。数字は<>を含めた文字数。
- プログラム(シュリンク): /home/kamano/gitsrc/XMLOP/shrink-tag.pl
- スクリプト(シュリンク): /home/kamano/gitsrc/XMLOP/shrink-tag.pl aa.merge-reg-material.cont.tsv > aa.merge-reg-material.cont.tsv.KO
- 結果: /BANK/PMC/20140724/elements/MERGED/Materials/aa.merge-reg-material.cont.tsv.KO
#### 2.1-b 検索(シュリンク)
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
- スクリプト(2): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matchResNameLines_merge-reg-material.All-KO.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/aa.resName_merge-reg-material.cont.KO.res
- 結果(まとめ): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/All.resName_merge-reg-material.cont.KO.res
- 結果の加工(リソース名のみを抜き出す): awk -F"<  >" '{print $2}' All.resName_merge-reg-material.cont.KO.res | sed -e "s/^                //" > All.resNameOnly_merge-reg-material.cont.KO.res.tsv
### ===完了===

### old:1. リソース名検索
- 検索リソース名パターン作成:
-- 対象: 利用者成果
-- リソース名: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
-- 検索ターム: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 利用者成果よりタームを抽出: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
-- 正規表現検索用に予約文字をエスケープ:
escape_char sf=/BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv lf=/usr/local/var/perl_esc.list > /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc
ln -s /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/match_pos_AllResNames_Jour-au.sh
###==========================
###===2014.07.30 1700 開始===
###===2014.08.02 1925 終了===
###==========================
### old:2. マテリアルメソッドセクションにあるか (新方式)(確認必要)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK)
#### -> 参照: TASK(extract.material) 1.
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_sec.pl
cd /BANK/PMC/20140724/elements/sec
/BANK/PMC/20140724/elements/sec/exec_command/sec_pos-au.sh
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
- プログラム: /home/kamano/gitsrc/XMLOP/region-sort_from_reg.pl
cd /BANK/PMC/20140724/elements/sec
for file in *reg; do  /home/kamano/gitsrc/XMLOP/region-sort_from_reg.pl $file > ${file}_sort; done
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/region-MMs_from_reg_sort.pl
cd /BANK/PMC/20140724/elements/sec
/home/kamano/gitsrc/XMLOP/region-MMs_from_reg_sort.pl sec_pos-au.reg_sort  | grep ^[^0-9] > sec_pos-au.reg-MMs
##### 新しい領域として、 sec_sort_pos-au.reg-Material  をつかう。
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
#### 2.2 (OLD) マテリアルメソッドセクションの領域とヒット領域を比較(ファイル消去) 
- プログラム: /home/kamano/gitsrc/XMLOP/check_res_sec-MMs.pl
 : ポジションでソートしているのでOK
cd /BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_commandcheck_Res_betSP_sec-MMs_Jour-aa.sh
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/check_pos_MMs_AllResNames_Jour-au.sh
#### 2.3. チェック済み結果をカウント
#####THEME[リソース名共出現解析]
##### 2.3.0 チェック用ターム:
/BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
#####検索タームがリテラルでない場合、一旦検索結果からチェック用タームを作る。
##### 2.3.1 インデックス付き行列 (不要)
##### 2.3.2 カウントスパース行列(matlab形式)を直接出力
#####インデックスは1からスタート
- プログラム(試験中): /home/kamano/gitsrc/XMLOP/count_Res_in_Art.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012
/home/kamano/gitsrc/XMLOP/count_Res_in_Art.pl rf=/BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv  hf=/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/match_pos_AllResNames_Jour-au.res.inMMs > count_AllResNames_Jour-au.res.inMMs
##### 2.3.3 カウントスパース行列　から　ヒットスパース行列へ
- プログラム: /home/kamano/gitsrc/utility/SP_count2hit.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012
for file in count*; do  /home/kamano/gitsrc/utility/SP_count2hit.pl $file > hit${file#count}; done
#### 2.4. インデックス付き行列 -> 数値のみ行列 (不要)
####逐次一括処理
#### 2.5. 数値行列のゼロ要素以外を1に置換 (1 articleにおける共起を1とカウントするため)(不要)
#### 2.6. 数値行列をスパース形式に変換 (不要)
##### 2.6.1 Mathematicaスパース形式
- プログラム: /home/kamano/gitsrc/utility/mk_MMA-SPA_from_numtable.pl
#####インデックスはmatlab用に1からスタート
##### 2.6.2 Matlab data 形式 (読み込んだ後にさらに変換が必要)
- プログラム: /home/kamano/gitsrc/utility/mk_MatlabSparse_from_numtable.pl
#####逐次一括処理(遅い)
for file in count_pos_MMs_AllResNames-U_Jour-a*.res.numonly; do  /home/kamano/gitsrc/utility/mk_MatlabSparse_from_numtable.pl $file > $file.sptbl; done
##### 2.6.3 Matrix Market 形式
- プログラム: /home/kamano/gitsrc/utility/mk_MatMarket_from_numtable.pl
#### 2.7. カウント
- ツール: matlab
##### 2.7.1 ヒットファイルを読み込むと同時にスパース配列に変換、一つの行列に連結。
>> cd('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/')
>> files = (dir('hit*'))
>> for i=1:length(files); SpCount{i}=spconvert(load(files(i).name)); end
>> SpCountCat=vertcat(SpCount{:});
###### 2.7.1.1 リソースネームの総出現数カウントの結果ファイル(csv)
>> SpCountCatSumRes=sum(SpCountCat);
>> CountCatSumRes=full(SpCountCatSumRes);
>> csvwrite('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/resource-count_AllResNames.inMMs.csv',CountCatSumRes)
- ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/resource-count_AllResNames.inMMs.csv
- 対応するリソース名ファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
- 対応するリソース名ファイル(グループタグ付き): /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name_group_org.sort.uniq.tsv
###### 2.7.1.2 articleの総出現数カウントの結果ファイル(csv)
>> TrSpCountCat = transpose(SpCountCat);
>> TrSpCountCatSum = sum(TrSpCountCat);
>> TrCountCatSum = full(TrSpCountCatSum);
>> csvwrite('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/article-count_AllResNames.inMMs.csv',TrCountCatSum)
- ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/article-count_AllResNames.inMMs.csv
- 対応するarticle名ファイル(複数): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/match_pos_AllResNames_Jour-a[a-u].res.inMMs
###===ここまで完了===
#### 2.8. リソース名(term)がマッチした箇所とファイル名の情報(1.)をRDBMSに入れる。リソース名から検索してファイル名と箇所を探せるように。(検討中)
####DB start
pg_ctl start -D /BANK/pgsql
####DB connect
psql term_region
##### 2.8.1 対象ファイル
/BANK/PMC/20130909/Matching/BioResource_AND_Organization/RIKEN-BRC_2012/check_Res_betSP_sec-MMs_Jour-[A-Z].res
##### 2.8.2 テーブル構造
DB:<term_region>:
Table0:<elementname>: <elementname> <annotation>
Table1:<region_type>: <region_type> <annotation> <element> #ex. tag, content ... 
Table2:<region_type_property>: <region_type> <property_target> <property_valur>
#####<region_type>は、region_type.region_typeのプロパティ付与。複数の<region_type_atom>のプロパティが付与されると、region_type.complex_or_single はcomplex。
#####<region_type_atom>は、少なくともその条件を満たしている。
Table4:<element_region>: <filename> <resourcename> <region_type> <region_start> <region_end>
Table5:<resourcename_region>: <filename> <resourcename> <region_type> <region_start> <region_end>
Table6:<organizationname_region>: <filename> <organizationname> <region_type> <region_start> <region_end>
Table7:<affriationname_region>: <filename> <affriationname> <region_type> <region_start> <region_end>
Table8:<...>: ... 

##TASK(2.2): JCRB (検索完了、チェック完了)
##THEME[kaken-26540170]
### 1. リソース名検索
- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
- method: match_position_ex_RE.pl コマンドを使用
cd /BANK/PMC/20140724/articles.fname/20
split -l 33216 Jour-All.fname Jour-split.
- コマンドフロー:
-- タームの検索
--- カタログよりリソース名とリソース番号を得る: /BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv
--- 正規表現検索用に予約文字をスケープ:
escape_char sf=/BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv lf=/usr/local/var/perl_esc.list > All.name.sort.uniq.tsv.esc
/BANK/BioResource/Organization/JCRB_2014/catalogue/All.name.sort.uniq.tsv.esc
---  検索
---- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140804 1400 開始===
###===20140806 0743 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK ->  前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===
### 3. チェック済み結果をカウント
###THEME[リソース名共出現解析]
#### 3.0 チェック用ターム: All.name.sort.uniq.tsv
####検索タームがリテラルでない場合、一旦検索結果からチェック用タームを作る。
#### 3.1 インデックス付き行列
- プログラム: /BANK/BioResource/bin/count_Res-Art_in_check.pl
cd /BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/exec_command/count_pos_MMs_AllResNames_Jour-aa.sh
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/exec_command/count_pos_MMs_AllResNames-U_Jour-aa.sh

##TASK(2.3): NITE-NBRC(検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/NITE-NBRC_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140808 1833 開始===
###===20140808 1942 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===

##TASK(2.4): DSMZ (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/DSMZ_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140811 1014 開始===
###===20140811 1029 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===

##TASK(2.5): WDCM (対象外)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
###ヒットしない -> データセンターなので、直接提供していない?
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/WDCM_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===n007 : 実行中========
###===20140815 1140 開始===
###===20140815 1230 終了===
###===ヒットなし===========
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 

##TASK(2.6): ATCC (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
###ヒットしない -> データセンターなので、直接提供していない?
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/ATCC_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===n003 : 実行==========
###===20140815 1313 開始===
###===20140815 1330 終了===
###========================
###===n007に転送===
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===





#TASK(4): XMLの分解 - バイオリソース名候補抜きだし
#量が多いので分割したものをsort-count、すべてのsort-countをmerge-sort-count
## 1. ALL: KOなし (2ワードフレーズまで完了)
### 1.1 single word (完了)
#### 1.1.1 切り出し
- プログラム: /home/kamano/gitsrc/utility/extract_Word.pl
cd /BANK/PMC/20140724/terms/whole/exec_command
/BANK/PMC/20140724/terms/whole/exec_command/extract_1W_Jour-au.sh
#### 1.1.2 sort uniq count
cd /BANK/PMC/20140724/terms/whole
sort Word_Jour-au | uniq -c > Word_Jour-au.sort.uniq
#### 1.1.3 total count
##### 1.1.3.1 count済みを次のmerge-sortのためにさらに整形
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
cd /BANK/PMC/20140724/terms/whole
for file in W*uniq; do /home/kamano/gitsrc/utility/rep4count.pl $file > $file.rep; done
##### 1.1.3.2 整形したものをmerge-sort
cd /BANK/PMC/20140724/terms/whole
cat Word*.sort.uniq.rep | sort -t ' ' -k2 > Word_Jour-All.merge
##### 1.1.3.3 sort-merge-sortをcount
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
cd /BANK/PMC/20140724/terms/whole
/home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl Word_Jour-All.merge > Word_Jour-All.merge.count
### 1.2 two-words-phrase (完了)
#### 1.2.1 切り出し
- プログラム: /home/kamano/gitsrc/utility/extract_phrase2W.pl
cd /BANK/PMC/20140724/terms/whole
/BANK/PMC/20140724/terms/whole/exec_command/extract_2W_Jour-au.sh
#### 1.2.2 sort uniq count
cd /BANK/PMC/20140724/terms/whole
sort phrase-2W_Jour-au | uniq -c > phrase-2W_Jour-au.sort.uniq
/BANK/PMC/20140724/terms/whole/exec_command/sort-uniq_All.sh
#### 1.2.3 total count
##### 1.2.3.1 count済みを次のmerge-sortのためにさらに整形
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
cd /BANK/PMC/20140724/terms/whole
for file in p*uniq; do /home/kamano/gitsrc/utility/rep4count.pl $file > $file.rep; done
##### 1.2.3.2 整形したものをmerge-sort
cd /BANK/PMC/20140724/terms/whole
cat *2W_Jour*.sort.uniq.rep | sort -t '	' -k2 -k3 > phrase-2W_Jour-All.merge
##### 1.2.3.3 sort-merge-sortをcount
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
cd /BANK/PMC/20140724/terms/whole
/home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl phrase-2W_Jour-All.merge > phrase-2W_Jour-All.merge.count
##===ここまで完了===
## 2. body
## 3. acknowledgement
## 4. MERGED/Materials: KOSP タグをスペースにKO
## patt.3 と patt.5 で実行
### 4.1 タグをKO、スペースに
- スクリプト:
cd /BANK/PMC/20140724/elements/MERGED/Materials
for file in *KO; do  /home/kamano/gitsrc/XMLOP/tag-KOSP.pl $file >  ${file}SP; done
### 4.2 ヘッダ情報を削除
for file in *KOSP; do awk -F'  '  '{for(i=3;i<=NF;i++){printf("%s ",$i)}}' $file > $file.drophead; done
### 4.3 termをsplit
- スクリプト: /BANK/PMC/20140724/terms/MERGED/Materials/patt.3/exec_command/split_Word.au.sh
### 4.4 それぞれのファイルをソート/ユニーク/カウント
- スクリプト: /BANK/PMC/20140724/terms/MERGED/Materials/patt.3/exec_command/sort_each.ALL.sh
### 4.5 全体をソート/ユニーク/カウントするための前処理
- スクリプト:
cd /BANK/PMC/20140724/terms/MERGED/Materials/patt.3
cat *sort.uniq | /home/kamano/gitsrc/utility/rep4count.pl | sort -t '     ' -k2 > Word.ALL.presort
### 4.6 前処理をマージカウント処理
- スクリプト:
cd /BANK/PMC/20140724/terms/MERGED/Materials/patt.3
 /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl Word.ALL.presort > Word.ALL.sort.count
### ===完了=== 
