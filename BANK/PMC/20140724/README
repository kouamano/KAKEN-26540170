#[リソース名共出現解析][kaken-26540170]


#TODO:
##check:
###/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014 -> OK
###match_pos_AllResNames_Jour-ao.res がない。-> OK
##プログラムの整理: gitsrc/KAKEN-26540170/BANK/PMC/bin を使わないようにする -> OK
##データのバックアップ
##As of 20141013 -> OK
/mnt/EDB200/BANK/BioResource - OK
/mnt/EDB200/BANK/Organization - OK
/mnt/EDB200/BANK/PMC/20140724 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014 -OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014 - 対象外
/mnt/EDB200/BANK/PMC/20140724/TAR - OK
/mnt/EDB200/BANK/PMC/20140724/articles - 対象外
/mnt/EDB200/BANK/PMC/20140724/articles.fname - OK
/mnt/EDB200/BANK/PMC/20140724/articles.pmid - OK
/mnt/EDB200/BANK/PMC/20140724/elements - OK
/mnt/EDB200/BANK/PMC/20140724/elements/ALL - OK
/mnt/EDB200/BANK/PMC/20140724/elements/MERGED - OK
/mnt/EDB200/BANK/PMC/20140724/elements/SKELTON - OK
/mnt/EDB200/BANK/PMC/20140724/elements/acknowledgement - OK
/mnt/EDB200/BANK/PMC/20140724/elements/aff - OK
/mnt/EDB200/BANK/PMC/20140724/elements/sec - OK
/mnt/EDB200/BANK/PMC/20140724/elements/sec-type - OK
/mnt/EDB200/BANK/PMC/20140724/elements/supplementary-material - OK
/mnt/EDB200/BANK/PMC/20140724/terms - OK



#NOTE:
##開始インデックス(イタレータ)まとめ
##C: 0
##perl: 0
##Mathematica: 1
##Matlab: 1


#ディレクトリ構成
- root: /BANK/
- XML情報: /BANK/PMC/<日付>/ 配下
- 機関情報: /BANK/Organization/<機関名_日付>/ 配下
- バイオリソース情報: /BANK/BioResource/Organization/<機関名_日付>/ 配下
- マッチング(検索)結果: /BANK/PMC/<日付>/Matching/BioResource/Organization/<機関名>/ 配下
- プログラム: root 以下の 各 bin フォルダ、または、github
- 実行スクリプト: 各 exec_command フォルダ


#PMC概観
- /BANK/PMC/20140724/articles : 54G, 843679 files
- /BANK/PMC/20140724/elements/SKELTON/skelton-ALL.res.tag-count.rep.merge-sort.count : 282タグ


#TASK(data) (20140724 に完了)
##TASK(data.1):PMCファイルの展開
- 展開先: /BANK/PMC/20140724/articles
- check:
-- ファイル名リスト作成
cd /BANK/PMC/20140724/articles
find ./ -name *.nxml > /BANK/PMC/20140724/articles.fname/20/Jour-All.fname
-- 分割
cd /BANK/PMC/20140724/articles.fname/20
split -l 42183 Jour-All.fname Jour-split
##TASK(data.2):PMCファイルのチェック
cd /BANK/PMC/20140724/articles.fname/20.check/exec_command
./jour-check.aa.sh
##エラーゼロを確認。


#TASK(check): pmid/pmcidのチェック (20140724 に完了 -> ディレクトリ移動あり)
##TASK(check.pmcid): PMC-XMLよりpmcidを抽出
- 対象: /BANK/PMC/20140724/articles.pmid/
- プログラム: /home/kamano/gitsrc/XMLOP/extract_pmcid.pl
cd /BANK/PMC/20140724/articles.pmid/exec_command
/BANK/PMC/20140724/articles.pmid/exec_command/jour-split.pmcid.au.sh
##TASK(check.pmid): PMC-XMLよりpmidを抽出
- 対象: /BANK/PMC/20140724/articles.pmid/
- プログラム: /home/kamano/gitsrc/XMLOP/extract_pmid.pl
cd /BANK/PMC/20140724/articles.pmid/exec_command
/BANK/PMC/20140724/articles.pmid/exec_command/jour-split.pmid.aa.sh
##TASK(check.user-data-pmid): RIKEN-BRC利用者成果よりpmidを抽出(20140904 移動)
- 対象: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/ALL.pmid.sort.uniq
##TASK(check.PMC_VS_user-data): RIKEN-BRC利用者成果pmid　PMC-XML_pmid　をマッチング(20140904 移動)
- ツール: Mathematica
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/ALL.pmid.sort.uniq.in_pmc


#TASK(element-tree)
##XMLのエレメント木を作成
- プログラム: /home/kamano/gitsrc/XMLOP/skelton.py
- 結果: /BANK/PMC/20140724/elements/SKELTON/*res
##各ジャーナルグループごとにタグをカウント
- プログラム: /home/kamano/gitsrc/utility/drop_colon.pl
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/tag-count-au.sh
- 結果: /BANK/PMC/20140724/elements/SKELTON/*res.tag-count
##マージのために余計なスペースを除去
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/rep_all.sh
- 結果: /BANK/PMC/20140724/elements/SKELTON/*res.tag-count.rep
##マージソート
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/merge-sort.sh
- 結果: skelton-ALL.res.tag-count.rep.merge-sort
##マージソートをカウント
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/count_merge.sh
- 結果: skelton-ALL.res.tag-count.rep.merge-sort.count


#TASK(tag.old): XMLのエレメントタグを抽出 -> TASK(tag.new) に移行
#cd /BANK/PMC/20140724/elements/ALL
#- 対象: PMC-XML全件
#- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_ALL.pl
#- スクリプト: /BANK/PMC/20140724/elements/ALL/exec_command/ALL_pos-au.sh
##TASK(tag.sort): 抽出したエレメントをpositionでソート
##POPSTACKエラー発生(中止) -> 新スクリプト開発中 -> OK -> TASK(tag.new)


#TASK(tag.new): XMLのエレメントタグを抽出・ソート(完了)
cd /BANK/PMC/20140724/elements/ALL
- 対象: PMC-XML全件
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_ALL_sort.pl
- スクリプト: /BANK/PMC/20140724/elements/ALL/exec_command/ALL_sort_pos-au.sh
#=====20140903 1539 開始=====#
#=====20140903 1724 終了=====#
#TASK(sec-type): sec-typeの種類を抽出
- ソース: /BANK/PMC/20140724/elements/sec/sec_pos-a[a-u].reg_sort
- プログラム: /home/kamano/gitsrc/XMLOP/grep-sec-type.pl
cd /BANK/PMC/20140724/elements/sec-type
/home/kamano/gitsrc/XMLOP/extract_sec-types.pl *reg_sort | sort | uniq -c > ALL_sec-type.sort.count


#TASK(extract)
##TASK(extract.ack) :  extract acknowledgement
## -> 石川氏
- file: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
##TAST(extract.aff) : extract affiliation
## -> 石川氏
##TASK(extract.material) : extract material
## method領域は抽出しない
## 参考: TASK(2.1)-2
## 件数:
## <sec sec-type=".*material.*"> : 502994
## <sec sec-type="materials|methods"> : 227009
## <sec sec-type="material.*"> : 約23万
## <sec sec-type="supplementary.*materials*"> : 約19万
## <supplementary-material> : 700187
## <inline-supplementary-material> : 1511
## 考え中: <sec sec-type=".*material.*"> で抽出した領域内に
## <supplementary-material> を含むものがある。
## 二重抽出にならないようにする必要がある。
## ->
## /BANK/PMC/20140724/elements/ALL/*reg より materialをgrepして調べる。
## ->
## まず、<sec sec-type="material.*">領域を抽出 <- materials|methodsもmaterialがさきにくる模様。
## つぎに、<supplementaly-material>領域を抽出
## つぎに、両者をマージ
## つぎに、かぶる領域を削除 <- より大きい領域を採用
### 1. <sec sec-type=".*material.*"> セクションの抽出(完了)
#### 1.1 <sec>タグの領域を抽出済みのソート済み全タグ領域より抽出(NEW)(完了)
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_sec_from_ALL.pl
- スクリプト: /BANK/PMC/20140724/elements/sec/exec_command/sec_pos_from_ALL-au.sh
- 結果: /BANK/PMC/20140724/elements/sec/sec_sort_pos-au.reg
#### revに対して同じ結果なのでこのままでOK
#### 1.2 抽出されたソート済み<sec>タグ領域　から　マテリアルセクションの領域を抽出(NEW)(完了)
- プログラム: /home/kamano/gitsrc/XMLOP/region-Material_from_reg_sort.pl
cd /BANK/PMC/20140724/elements/sec
/home/kamano/gitsrc/XMLOP/region-Material_from_reg_sort.pl sec_sort_pos-au.reg > sec_sort_pos-au.reg-Material
### 2. <supplementary-material> セクションの抽出
#### 2.1 <supplementary-material>タグの領域を抽出済みのソート済み全タグ領域より抽出(NEW)(完了)
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_sup-material_from_ALL.pl
- スクリプト: /BANK/PMC/20140724/elements/supplementary-material/exec_command/sup-material_pos_from_ALL-au.sh
- 結果: /BANK/PMC/20140724/elements/supplementary-material/sup-material_sort_pos-au.reg
####====20141024 終了====####
#### 2.2 抽出されたソート済み<supplementary-material>タグ領域からマテリアルセクションの領域を>抽出(NEW)
- プログラム: /home/kamano/gitsrc/XMLOP/region-sup-Material_from_reg_sort.pl
cd /BANK/PMC/20140724/elements/supplementary-material
/home/kamano/gitsrc/XMLOP/region-sup-Material_from_reg_sort.pl sup-material_sort_pos-au.reg > sup-material_sort_pos-au.reg-sup-Material
####====20141024 終了====####
### 3. reg-Material と reg-sup-Matarial をマージ
### プログラム作成中
- プログラム: /home/kamano/gitsrc/XMLOP/merge_region.pl
### 4. sec_pos-au.reg-MMs をもとにテキストを抽出、改行はスペースに変換(未完)



#TASK(1): 既知リソース名・機関名の決定と検索タームの決定 (20140724 6機関を決定完了)
#THEME[リソース名共出現解析][kaken-26540170]
##TASK(1.1): RIKEN-BRC
- リソース
-- 対象: RIKEN BRC (利用者成果)
-- リソース名: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.rev
-- 検索ターム: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
- 機関名
-- 検索ターム: /BANK/Organiztion/RIKEN-BRC_2012/organization-name/org.name.only
##TASK(1.2): JCRB
- リソース
-- 対象: JCRB (オンラインカタログ)
-- リソース名: /BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv
-- 検索ターム: /BANK/BioResource/Organization/JCRB_2014/catalogue/All.name.sort.uniq.tsv.esc.rev
- 機関名
-- 検索ターム: /BANK/Organiztion/JCRB_2014/organization-name/org.name.only
##TASK(1.3): NITE-NBRC
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/NITE-NBRC_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/NITE-NBRC_2014/organization-name/org.name.only
##TASK(1.4): DSMZ
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/DSMZ_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/DSMZ_2014/organization-name/org.name.only
##TASK(1.5): WDCM
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/WDCM_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/WDCM_2014/organization-name/org.name.only
##TASK(1.6): ATCC
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/ATCC_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/ATCC_2014/organization-name/org.name.only


#TASK(2): 既知リソース名検索
##TASK(2.1): RIKEN-BRC (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成:
-- 対象: 利用者成果
-- リソース名: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
-- 検索ターム: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 利用者成果よりタームを抽出: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
-- 正規表現検索用に予約文字をエスケープ:
escape_char sf=/BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv lf=/usr/local/var/perl_esc.list > /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc
ln -s /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/match_pos_AllResNames_Jour-au.sh
###==========================
###===2014.07.30 1700 開始===
###===2014.08.02 1925 終了===
###==========================
### 2. マテリアルメソッドセクションにあるか (新方式)(確認必要)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK)
#### -> 参照: TASK(extract.material) 1.
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_sec.pl
cd /BANK/PMC/20140724/elements/sec
/BANK/PMC/20140724/elements/sec/exec_command/sec_pos-au.sh
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
- プログラム: /home/kamano/gitsrc/XMLOP/region-sort_from_reg.pl
cd /BANK/PMC/20140724/elements/sec
for file in *reg; do  /home/kamano/gitsrc/XMLOP/region-sort_from_reg.pl $file > ${file}_sort; done
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/region-MMs_from_reg_sort.pl
cd /BANK/PMC/20140724/elements/sec
/home/kamano/gitsrc/XMLOP/region-MMs_from_reg_sort.pl sec_pos-au.reg_sort  | grep ^[^0-9] > sec_pos-au.reg-MMs
##### 新しい領域として、 sec_sort_pos-au.reg-Material  をつかう。
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
#### 2.2 (OLD) マテリアルメソッドセクションの領域とヒット領域を比較 
- プログラム: /home/kamano/gitsrc/XMLOP/check_res_sec-MMs.pl
 : ポジションでソートしているのでOK
cd /BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_commandcheck_Res_betSP_sec-MMs_Jour-aa.sh
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/check_pos_MMs_AllResNames_Jour-au.sh
#### 2.3. チェック済み結果をカウント
#####THEME[リソース名共出現解析]
##### 2.3.0 チェック用ターム:
/BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
#####検索タームがリテラルでない場合、一旦検索結果からチェック用タームを作る。
##### 2.3.1 インデックス付き行列 (不要)
##### 2.3.2 カウントスパース行列(matlab形式)を直接出力
#####インデックスは1からスタート
- プログラム(試験中): /home/kamano/gitsrc/XMLOP/count_Res_in_Art.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012
/home/kamano/gitsrc/XMLOP/count_Res_in_Art.pl rf=/BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv  hf=/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/match_pos_AllResNames_Jour-au.res.inMMs > count_AllResNames_Jour-au.res.inMMs
##### 2.3.3 カウントスパース行列　から　ヒットスパース行列へ
- プログラム: /home/kamano/gitsrc/utility/SP_count2hit.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012
for file in count*; do  /home/kamano/gitsrc/utility/SP_count2hit.pl $file > hit${file#count}; done
#### 2.4. インデックス付き行列 -> 数値のみ行列 (不要)
####逐次一括処理
#### 2.5. 数値行列のゼロ要素以外を1に置換 (1 articleにおける共起を1とカウントするため)(不要)
#### 2.6. 数値行列をスパース形式に変換 (不要)
##### 2.6.1 Mathematicaスパース形式
- プログラム: /home/kamano/gitsrc/utility/mk_MMA-SPA_from_numtable.pl
#####インデックスはmatlab用に1からスタート
##### 2.6.2 Matlab data 形式 (読み込んだ後にさらに変換が必要)
- プログラム: /home/kamano/gitsrc/utility/mk_MatlabSparse_from_numtable.pl
#####逐次一括処理(遅い)
for file in count_pos_MMs_AllResNames-U_Jour-a*.res.numonly; do  /home/kamano/gitsrc/utility/mk_MatlabSparse_from_numtable.pl $file > $file.sptbl; done
##### 2.6.3 Matrix Market 形式
- プログラム: /home/kamano/gitsrc/utility/mk_MatMarket_from_numtable.pl
#### 2.7. カウント
- ツール: matlab
##### 2.7.1 ヒットファイルを読み込むと同時にスパース配列に変換、一つの行列に連結。
>> cd('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/')
>> files = (dir('hit*'))
>> for i=1:length(files); SpCount{i}=spconvert(load(files(i).name)); end
>> SpCountCat=vertcat(SpCount{:});
###### 2.7.1.1 リソースネームの総出現数カウントの結果ファイル(csv)
>> SpCountCatSumRes=sum(SpCountCat);
>> CountCatSumRes=full(SpCountCatSumRes);
>> csvwrite('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/resource-count_AllResNames.inMMs.csv',CountCatSumRes)
- ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/resource-count_AllResNames.inMMs.csv
- 対応するリソース名ファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
- 対応するリソース名ファイル(グループタグ付き): /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name_group_org.sort.uniq.tsv
###### 2.7.1.2 articleの総出現数カウントの結果ファイル(csv)
>> TrSpCountCat = transpose(SpCountCat);
>> TrSpCountCatSum = sum(TrSpCountCat);
>> TrCountCatSum = full(TrSpCountCatSum);
>> csvwrite('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/article-count_AllResNames.inMMs.csv',TrCountCatSum)
- ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/article-count_AllResNames.inMMs.csv
- 対応するarticle名ファイル(複数): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/match_pos_AllResNames_Jour-a[a-u].res.inMMs
###===ここまで完了===
#### 2.8. リソース名(term)がマッチした箇所とファイル名の情報(1.)をRDBMSに入れる。リソース名から検索してファイル名と箇所を探せるように。(検討中)
####DB start
pg_ctl start -D /BANK/pgsql
####DB connect
psql term_region
##### 2.8.1 対象ファイル
/BANK/PMC/20130909/Matching/BioResource_AND_Organization/RIKEN-BRC_2012/check_Res_betSP_sec-MMs_Jour-[A-Z].res
##### 2.8.2 テーブル構造
DB:<term_region>:
Table0:<elementname>: <elementname> <annotation>
Table1:<region_type>: <region_type> <annotation> <element> #ex. tag, content ... 
Table2:<region_type_property>: <region_type> <property_target> <property_valur>
#<region_type>は、region_type.region_typeのプロパティ付与。複数の<region_type_atom>のプロパティが付与されると、region_type.complex_or_single はcomplex。
#<region_type_atom>は、少なくともその条件を満たしている。
Table4:<element_region>: <filename> <resourcename> <region_type> <region_start> <region_end>
Table5:<resourcename_region>: <filename> <resourcename> <region_type> <region_start> <region_end>
Table6:<organizationname_region>: <filename> <organizationname> <region_type> <region_start> <region_end>
Table7:<affriationname_region>: <filename> <affriationname> <region_type> <region_start> <region_end>
Table8:<...>: ... 

##TASK(2.2): JCRB (検索完了、チェック完了)
##THEME[kaken-26540170]
### 1. リソース名検索
- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
- method: match_position_ex_RE.pl コマンドを使用
cd /BANK/PMC/20140724/articles.fname/20
split -l 33216 Jour-All.fname Jour-split.
- コマンドフロー:
-- タームの検索
--- カタログよりリソース名とリソース番号を得る: /BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv
--- 正規表現検索用に予約文字をスケープ:
escape_char sf=/BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv lf=/usr/local/var/perl_esc.list > All.name.sort.uniq.tsv.esc
/BANK/BioResource/Organization/JCRB_2014/catalogue/All.name.sort.uniq.tsv.esc
---  検索
---- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140804 1400 開始===
###===20140806 0743 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK ->  前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===
### 3. チェック済み結果をカウント
###THEME[リソース名共出現解析]
#### 3.0 チェック用ターム: All.name.sort.uniq.tsv
####検索タームがリテラルでない場合、一旦検索結果からチェック用タームを作る。
#### 3.1 インデックス付き行列
- プログラム: /BANK/BioResource/bin/count_Res-Art_in_check.pl
cd /BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/exec_command/count_pos_MMs_AllResNames_Jour-aa.sh
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/exec_command/count_pos_MMs_AllResNames-U_Jour-aa.sh

##TASK(2.3): NITE-NBRC(検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/NITE-NBRC_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140808 1833 開始===
###===20140808 1942 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===

##TASK(2.4): DSMZ (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/DSMZ_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140811 1014 開始===
###===20140811 1029 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===

##TASK(2.5): WDCM (対象外)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
###ヒットしない -> データセンターなので、直接提供していない?
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/WDCM_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===n007 : 実行中========
###===20140815 1140 開始===
###===20140815 1230 終了===
###===ヒットなし===========
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 

##TASK(2.6): ATCC (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
###ヒットしない -> データセンターなので、直接提供していない?
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/ATCC_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===n003 : 実行==========
###===20140815 1313 開始===
###===20140815 1330 終了===
###========================
###===n007に転送===
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===


#TASK(3): 既知機関名の検索 THEME[kaken-26540170]
##TASK(3.1): ack領域より機関名検索(5機関)(抽出もれあり、再抽出 20140905)
##!=====実行環境:n003=====!##
### 1. acknowledgement エレメントの抽出(石川氏)
- データ: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
###=====完了=====###
### 2. エレメントから機関名を検索(天野)(完了)
cd /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_
- 対象: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/5orgs.name.only
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
- スクリプト:
 /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/exec_command/5orgs_in_ack.sh
 /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/exec_command/5org_extract_hit.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/5orgs_in_ack.hit
- PMID付きPMC-BRC利用者成果(118件) AND 結果: (30件) : /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/pmid_5orgs_AND_BRCuser_inACK
###=====完了=====###
### 3. 機関名抽出法の検討(角田氏)(検討中)
##TASK(3.2): aff領域より機関名検索(5機関)
### 1. acknowledgement エレメントの抽出(石川氏)
#### 1.1 ラフ抽出(BMC BIoinformatics誌)
- 結果ファイル
/BANK/PMC/20140724/elements/aff/PMC-AFF-BMC_Bio.tsv
/BANK/PMC/20140724/elements/aff/PMC-AFF-BMC_Bio.txt
####=====完了 20140925=====####
#### 1.2 全抽出(石川氏)(未完)
##TASK(3.3): 全PMC-XMLより機関名を検索(20140801 完了)
###TASK(3.3.1) RIKEN-BRC :
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/RIKEN-BRC_2012/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.3.2) JCRB :
###既知機関名のリスト検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/JCRB_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.3.3): NITE-NBRC
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/NITE-NBRC_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.3.4): DSMZ
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/DSMZ_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.3.5): WDCM
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/WDCM_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.3.6): ATCC
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/ATCC_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
##===ここまで完了===##


#TASK(4): XMLの分解 - バイオリソース名候補抜きだし
#量が多いので分割したものをsort-count、すべてのsort-countをmerge-sort-count
## 1. whole (2ワードフレーズまで完了)
### 1.1 single word (完了)
#### 1.1.1 切り出し
- プログラム: /home/kamano/gitsrc/utility/extract_Word.pl
cd /BANK/PMC/20140724/terms/whole/exec_command
/BANK/PMC/20140724/terms/whole/exec_command/extract_1W_Jour-au.sh
#### 1.1.2 sort uniq count
cd /BANK/PMC/20140724/terms/whole
sort Word_Jour-au | uniq -c > Word_Jour-au.sort.uniq
#### 1.1.3 total count
##### 1.1.3.1 count済みを次のmerge-sortのためにさらに整形
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
cd /BANK/PMC/20140724/terms/whole
for file in W*uniq; do /home/kamano/gitsrc/utility/rep4count.pl $file > $file.rep; done
##### 1.1.3.2 整形したものをmerge-sort
cd /BANK/PMC/20140724/terms/whole
cat Word*.sort.uniq.rep | sort -t ' ' -k2 > Word_Jour-All.merge
##### 1.1.3.3 sort-merge-sortをcount
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
cd /BANK/PMC/20140724/terms/whole
/home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl Word_Jour-All.merge > Word_Jour-All.merge.count
### 1.2 two-words-phrase (完了)
#### 1.2.1 切り出し
- プログラム: /home/kamano/gitsrc/utility/extract_phrase2W.pl
cd /BANK/PMC/20140724/terms/whole
/BANK/PMC/20140724/terms/whole/exec_command/extract_2W_Jour-au.sh
#### 1.2.2 sort uniq count
cd /BANK/PMC/20140724/terms/whole
sort phrase-2W_Jour-au | uniq -c > phrase-2W_Jour-au.sort.uniq
/BANK/PMC/20140724/terms/whole/exec_command/sort-uniq_All.sh
#### 1.2.3 total count
##### 1.2.3.1 count済みを次のmerge-sortのためにさらに整形
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
cd /BANK/PMC/20140724/terms/whole
for file in p*uniq; do /home/kamano/gitsrc/utility/rep4count.pl $file > $file.rep; done
##### 1.2.3.2 整形したものをmerge-sort
cd /BANK/PMC/20140724/terms/whole
cat *2W_Jour*.sort.uniq.rep | sort -t '	' -k2 -k3 > phrase-2W_Jour-All.merge
##### 1.2.3.3 sort-merge-sortをcount
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
cd /BANK/PMC/20140724/terms/whole
/home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl phrase-2W_Jour-All.merge > phrase-2W_Jour-All.merge.count
##===ここまで完了===
## 2. body
## 3. acknowledgement


#TASK(5): 既知機関名vs.既知リソース名対の決定
#THEME[kaken-26540170]
##DB作成

