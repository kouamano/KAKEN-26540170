#[リソース名共出現解析][kaken-26540170][引用解析]



#検討事項:
##正解論文を集めてそこからパターンを抽出することを検討



#TODO:
##check: OK
###/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014 -> OK
###match_pos_AllResNames_Jour-ao.res がない。-> OK
##プログラムの整理: gitsrc/KAKEN-26540170/BANK/PMC/bin を使わないようにする -> OK
##TASK(term-count)
##データのバックアップ: OK
##As of 20141013 -> OK
/mnt/EDB200/BANK/BioResource - OK
/mnt/EDB200/BANK/Organization - OK
/mnt/EDB200/BANK/PMC/20140724 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014 -OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012 - OK
/mnt/EDB200/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014 - 対象外
/mnt/EDB200/BANK/PMC/20140724/TAR - OK
/mnt/EDB200/BANK/PMC/20140724/articles - 対象外
/mnt/EDB200/BANK/PMC/20140724/articles.fname - OK
/mnt/EDB200/BANK/PMC/20140724/articles.pmid - OK
/mnt/EDB200/BANK/PMC/20140724/elements - OK
/mnt/EDB200/BANK/PMC/20140724/elements/ALL - OK
/mnt/EDB200/BANK/PMC/20140724/elements/MERGED - OK
/mnt/EDB200/BANK/PMC/20140724/elements/SKELTON - OK
/mnt/EDB200/BANK/PMC/20140724/elements/acknowledgement - OK
/mnt/EDB200/BANK/PMC/20140724/elements/aff - OK
/mnt/EDB200/BANK/PMC/20140724/elements/sec - OK
/mnt/EDB200/BANK/PMC/20140724/elements/sec-type - OK
/mnt/EDB200/BANK/PMC/20140724/elements/supplementary-material - OK
/mnt/EDB200/BANK/PMC/20140724/terms - OK



#NOTE:
##開始インデックス(イタレータ)まとめ
##C: 0
##perl: 0
##Mathematica: 1
##Matlab: 1



#ディレクトリ構成
- root: /BANK/
- XML情報: /BANK/PMC/<日付>/ 配下
- 機関情報: /BANK/Organization/<機関名_日付>/ 配下
- バイオリソース情報: /BANK/BioResource/Organization/<機関名_日付>/ 配下
- マッチング(検索)結果: /BANK/PMC/<日付>/Matching/BioResource/Organization/<機関名>/ 配下
- プログラム: root 以下の 各 bin フォルダ、または、github
- 実行スクリプト: 各 exec_command フォルダ



#PMC概観
- /BANK/PMC/20140724/articles : 54G, 843679 files
- /BANK/PMC/20140724/elements/SKELTON/skelton-ALL.res.tag-count.rep.merge-sort.count : 282タグ



#TASK(data) (随時更新) : データの基本情報をまとめる
##TASK(data.1):PMCファイルの展開
- 展開先: /BANK/PMC/20140724/articles
- check:
-- ファイル名リスト作成
cd /BANK/PMC/20140724/articles
find ./ -name *.nxml > /BANK/PMC/20140724/articles.fname/20/Jour-All.fname
-- 分割
cd /BANK/PMC/20140724/articles.fname/20
split -l 42183 Jour-All.fname Jour-split
##TASK(data.2):PMCファイルのチェック
cd /BANK/PMC/20140724/articles.fname/20.check/exec_command
./jour-check.aa.sh
##エラーゼロを確認。
##TASK(data.fname): ファイルネームのリスト作成
- dir : /BANK/PMC/20140724/articles.fname/20
##TASK(data.issn): ファイル vs. issn情報
- dir : /BANK/PMC/20140724/articles.issn
### 1. issnの摘出(20150405)
- 対象: /BANK/PMC/20140724/articles/*/*.nxml
- 対象ファイルリスト: /BANK/PMC/20140724/articles.fname/20/Jour-split.a[a-u]
- プログラム: /home/kamano/gitsrc/XMLOP/extract_issn.pl
- スクリプト: /BANK/PMC/20140724/articles.issn/exec_command/extract_issn.ALL.sh
- 結果: /BANK/PMC/20140724/articles.issn/Jour-split.issn.au
##TASK(data.pmid): ファイル vs. pmid情報
- dir : /BANK/PMC/20140724/articles.pmid
##TASK(data.title):  ファイル vs. title
- dir : /BANK/PMC/20140724/articles.title
### 1. アーティクルタイトルの抽出(20150226)
- プログラム: /home/kamano/gitsrc/XMLOP/extract_art-title_in_front.pl
- スクリプト: /BANK/PMC/20140724/articles.title/exec_command/jour-split.title.All.sh
- 結果: /BANK/PMC/20140724/articles.title/jour-split.title.au
##TASK(data.type):  ファイル vs. article-type
- dir : /BANK/PMC/20140724/articles.type
### 1. articletypeの摘出(20150405)
- 対象: /BANK/PMC/20140724/articles/*/*.nxml
- 対象ファイルリスト: /BANK/PMC/20140724/articles.fname/20/Jour-split.a[a-u]
- プログラム: /home/kamano/gitsrc/XMLOP/extract_art-type.pl
- スクリプト: /BANK/PMC/20140724/articles.type/exec_command/extract_art-type.ALL.sh
- 結果: /BANK/PMC/20140724/articles.type/Jour-split.arttype.au



#TASK(check): pmid/pmcidのチェック (20140724 に完了 -> ディレクトリ移動あり)
##TASK(check.pmcid): PMC-XMLよりpmcidを抽出
- 対象: /BANK/PMC/20140724/articles.pmid/
- プログラム: /home/kamano/gitsrc/XMLOP/extract_pmcid.pl
cd /BANK/PMC/20140724/articles.pmid/exec_command
/BANK/PMC/20140724/articles.pmid/exec_command/jour-split.pmcid.au.sh
##TASK(check.pmid): PMC-XMLよりpmidを抽出
- 対象: /BANK/PMC/20140724/articles.pmid/
- プログラム: /home/kamano/gitsrc/XMLOP/extract_pmid.pl
cd /BANK/PMC/20140724/articles.pmid/exec_command
/BANK/PMC/20140724/articles.pmid/exec_command/jour-split.pmid.aa.sh
##TASK(check.user-data-pmid): RIKEN-BRC利用者成果よりpmidを抽出(20140904 移動)
- 対象: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/ALL.pmid.sort.uniq
##TASK(check.PMC_VS_user-data): RIKEN-BRC利用者成果pmid　PMC-XML_pmid　をマッチング(20140904 移動)
- ツール: Mathematica
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/ALL.pmid.sort.uniq.in_pmc.hit



#TASK(element-tree)
##XMLのエレメント木を作成
- プログラム: /home/kamano/gitsrc/XMLOP/skelton.py
- 結果: /BANK/PMC/20140724/elements/SKELTON/*res
##各ジャーナルグループごとにタグをカウント
- プログラム: /home/kamano/gitsrc/utility/drop_colon.pl
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/tag-count-au.sh
- 結果: /BANK/PMC/20140724/elements/SKELTON/*res.tag-count
##マージのために余計なスペースを除去
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/rep_all.sh
- 結果: /BANK/PMC/20140724/elements/SKELTON/*res.tag-count.rep
##マージソート
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/merge-sort.sh
- 結果: skelton-ALL.res.tag-count.rep.merge-sort
##マージソートをカウント
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
- スクリプト: /BANK/PMC/20140724/elements/SKELTON/exec_command/count_merge.sh
- 結果: skelton-ALL.res.tag-count.rep.merge-sort.count



#TASK(tag.new): XMLのエレメントタグを抽出・ソート・レベル付与(20150417完了)
- 対象: PMC-XML全件 (/BANK/PMC/20140724/articles/*/*nxml)
-- コメント中にタグがあるのでコメントを空白列に置き換える必要アリ。
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_sequence_flag-lv.pl
- スクリプト: /BANK/PMC/20140724/elements/ALL/exec_command/ALL_sort_pos_lv_rev-au.sh
- 結果: /BANK/PMC/20140724/elements/ALL/ALL_sort_pos_rev-au.reg+lv



#TASK(sec-type): sec-typeの種類を抽出
- ソース: /BANK/PMC/20140724/elements/sec/sec_pos-a[a-u].reg_sort
- プログラム: /home/kamano/gitsrc/XMLOP/grep-sec-type.pl
cd /BANK/PMC/20140724/elements/sec-type
/home/kamano/gitsrc/XMLOP/extract_sec-types.pl *reg_sort | sort | uniq -c > ALL_sec-type.sort.count



#TASK(term-count): 出現タームのカウント
##タグの除去とsplit
- プログラム:
-- /home/kamano/gitsrc/XMLOP/drop_tag-text.pl
-- /home/kamano/gitsrc/XMLOP/splitter3.pl
- スクリプト: /BANK/PMC/20140724/terms/whole/patt.3/exec_command/split_Word_Jour-ALL.sh
- 出力ファイル: /BANK/PMC/20140724/terms/whole/patt.3/Word_Jour-au
###==20141204 1129 開始==###
##分割ファイルのソート



#TASK(extract)
##TASK(extract.ack) :  extract acknowledgement
## -> 石川氏
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
##TAST(extract.aff) : extract affiliation
## -> 石川氏
- 対象領域: /BANK/PMC/20140724/elements/aff/PMC-AFF-v1.tsv (20141114)
##TASK(extract.material;new) : extract material 新方式(20140417)
### 領域のポインター情報作成(20140417)
- 対象: /BANK/PMC/20140724/elements/ALL/ALL_sort_pos_rev-au.reg+lv
- プログラム: /home/kamano/gitsrc/XMLOP/extract_pos-tag-allmaterials.pl
 <*material*></>のリージョンを一発で取り出すスクリプト。
- スクリプト: /BANK/PMC/20140724/elements/MERGED/allmaterials/exec_command/extract_all-materials-reg_from_reg.sh
- 結果: /BANK/PMC/20140724/elements/MERGED/allmaterials/allmaterials.au.reg
### 領域抽出(20150417)
- 対象: /BANK/PMC/20140724/elements/MERGED/allmaterials/allmaterials.au.reg
- プログラム: /home/kamano/gitsrc/XMLOP/extract_content_from_reg_allmaterial.pl
 extract_pos-tag-allmaterials.pl の出力から、直接対象領域を取り出す。
-- example: /home/kamano/gitsrc/XMLOP/extract_content_from_reg_allmaterial.pl /BANK/PMC/20140724/articles /BANK/PMC/20140724/elements/MERGED/allmaterials/allmaterials.au.reg
- スクリプト: /BANK/PMC/20140724/elements/MERGED/allmaterials/exec_command/extract_cont_from_reg.au.sh
###===いまここ 実行中===###
- 結果: /BANK/PMC/20140724/elements/MERGED/allmaterials/allmaterials.au.reg.cont

## [old] TASK(extract.material) : extract material
- old dir: /BANK/PMC/20140724/elements/MERGED/Materials
 使用しないこと。
 かわりに、/BANK/PMC/20140724/elements/MERGED/allmaterials/ 配下のデータを使用すべし。

##TASK(extract.xref): xrefを含む直上位のレベルを抜き出す。
### 1-(2) xrefと直上タグのポジションを抜き出し、必要なxref部分を特定、特定領域をプリント ver.2 (20150416)
#### 1-(2).1 xrefと直上タグのポジションを抜き出す (20150404)
- 対象: /BANK/PMC/20140724/elements/ALL/ALL_sort_pos_rev-au.reg+lv
- プログラム: /home/kamano/gitsrc/XMLOP/extract_pos_xref_lv_in_body.pl /BANK/PMC/20140724/elements/ALL/ALL_sort_pos_rev-au.reg+lv
 タグが正しく閉じられるかの情報をプリント。
- スクリプト: /BANK/PMC/20140724/elements/x+ref+p/exec_command/extract_reg-lv_xref-p-sec_in_body.sh
- 結果: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au
####===いまここ プログラムに不正発覚 もともとのレベル計算に不正あり===####
#### 1-(2).2 xrefと直上タグのポジションよりbibrを抜き出す (20150404)
- 対象: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au
- プログラム: /home/kamano/gitsrc/XMLOP/extract_bibr_from_pos_xref_lv.pl
- スクリプト: /BANK/PMC/20140724/elements/x+ref+p/exec_command/extract_bibr_from_xref-p-sec.sh
- 結果: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au.bibr
#### 1-(2).3 xrefと直上タグのポジションとbibr情報より除外すべきデータを除外する (20150406)
- 対象: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au.bibr
- プログラム: /home/kamano/gitsrc/XMLOP/exclude_from_rev-lv.pl
- スクリプト: /BANK/PMC/20140724/elements/x+ref+p/exec_command/exclude_from_rev-lv-bibr.sh
- スクリプト(2): /BANK/PMC/20140724/elements/x+ref+p/exec_command/exclude_from_rev-lv-bibr.ao.sh
- 結果: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au.bibr.exc
#### 1-(2).4 対象領域の抜きだし(20150407)
- 対象: /BANK/PMC/20140724/articles/*/*.nxml
- 対象ファイルリスト: Jour-split.a[a-u]
- 領域情報: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au.bibr.exc
- プログラム: /home/kamano/gitsrc/XMLOP/extract_content_xref_from_reg-lv.pl
-- プログラム中で呼び出される外部プログラム: /usr/local/bin/streamcut
- スクリプト: /BANK/PMC/20140724/elements/x+ref+p/exec_command/extract_content_xref_from_reg-lv.sh
-- 問題発生: Can't open /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-ae.bibr.exc : ファイルが作成されていない。
---  まず、ターゲットとなるファイルを作成
---- 特別なスクリプトを作成: /BANK/PMC/20140724/elements/x+ref+p/exec_command/exclude_from_rev-lv-bibr.ae.sh
---- 結果: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-ae.bibr.exc
--- 作成されたファイルを対象にした特別なスクリプトを作成: /BANK/PMC/20140724/elements/x+ref+p/exec_command/extract_content_xref_from_reg-lv.ae.sh
--- 結果: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-ae.bibr.exc.cont
- 結果: /BANK/PMC/20140724/elements/x+ref+p/reg-lv_xref-p-sec_in_body-au.bibr.exc.cont
### 2. 対象論文を article-type で絞る

##TASK(extract.ref) : xrefを含むp領域のextract、対応するref領域のextract
### 1. xrefを含むp領域のextract
- プログラム: /home/kamano/gitsrc/XMLOP/region-xrefINp_from_XML.pl
- スクリプト: /BANK/PMC/20140724/elements/x+ref+p/exec_command/content_xrefINp_Jour-ALL.sh
- 結果: /BANK/PMC/20140724/elements/x+ref+p/content_xrefINp_Jour-au
### 2. 対応するref領域のextract
対象ファイル: content_ref_Jour-a*
- プログラム: /home/kamano/gitsrc/XMLOP/region-ref_from_XML.pl
- スクリプト: /BANK/PMC/20140724/elements/x+ref+p/exec_command/content_ref_Jour-ALL.sh
- 結果: /BANK/PMC/20140724/elements/x+ref+p/content_ref_Jour-au
### 3. ペアリング ->  柴田さん




#TASK(check-correct): 正解データに対して機関名検索を行いカバレッジを確認 (20150123)
## 1. 対象ファイルの決定
## XMLと正解データのPMIDをマッチさせる
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/ALL.pmidVSfilename.sort.uniq.in_pmc.hit
## 2. 対象ファイルを抜きだし(リンク作成)
- プログラム: ln
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/XML/exec_command/mklink.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/XML/
## 3 検索
### 3.1 対象ファイルに対して機関名をgrep検索(RIKEN BRC)
- プログラム: grep
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/exec-command/grep-orgnames.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/grep-orgnames.out
### 3.2 対象ファイルに対して機関名をgrep検索(RIKEN)
- プログラム: grep
- スクリプト: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/exec-command/grep-RIKEN.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/grep-RIKEN.out
## 4 文献チェック
- チェックすべきPrimary番号リスト(利用者成果エクセル表に対応): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/artgrNoHitPrimaryInPMC.tsv
- 上記チェック文献リストの根拠(作業記録): /BANK/BioResource/Organization/RIKEN-BRC_2012/user-data/UserArticles.nb



#TASK(1 ver.2): 既知リソース名・機関名の決定と検索タームの決定 (NBRP)
##TASK(1.1): NBRC利用者成果からバイオリソース名+請求番号を抜き出す(20140416)
- 利用者成果ファイル: /BANK/BioResource/Organization/NBRP_2015/user-data/reference_list.tsv
- Resource name カラムを抜き出したもの: /BANK/BioResource/Organization/NBRP_2015/user-data/Resnames.line
- さらに個別のリソースに分割: /BANK/BioResource/Organization/NBRP_2015/user-data/Resnames
-- ", " (<カンマ><スペース>)で区切る
-- "; " (<セミコロン><スペース>)で区切る
-- プログラム: /home/kamano/gitsrc/utility/CM-SP_SC-SP_to_LF.pl
-- "," カッコ内でなければ(<カンマ>)で区切る
-- プログラムソース: /home/kamano/gitsrc/utility/CM_to_LF_out_Bracket.c
-- スクリプト: /home/kamano/gitsrc/utility/CM-SP_SC-SP_to_LF.pl Resnames.line | /home/kamano/gitsrc/utility/CM_to_LF_out_Bracket if=/dev/stdin > Resnames
-- リフォーム:  sed -e 's/^\s+//' Resnames | sed -e 's/\s+$//' > Resnames.re
- リストをリソースネーム vs. リソース番号の形に整形
-- プログラム(作成中): /home/kamano/gitsrc/utility/divide_lastBRK.pl
-- 結果: /BANK/BioResource/Organization/NBRP_2015/user-data/ResnameVSid



#TASK(1 ver.1): 既知リソース名・機関名の決定と検索タームの決定 (8機関を決定完了)
#THEME[リソース名共出現解析][kaken-26540170]
#大型機関に絞って行なうこととする。
##TASK(1.0): 対象機関の決定 -> 8機関に決定
- ファイル: /BANK/Organization/_ALL_/organization-name/8orgs.name.list
- idと検索タームのペアを作る: pair.pl
- id vs. 検索ターム: 8orgs.name.idVSterms
- 検索タームのみ: 8orgs.name.terms
##条件: 大学以外、もしくはセンター
##方法: インターネット検索
##アスタリスク(*)が今回の対象
日本:
-* riken brc
-* nig
-* nite nbrc
-* jcrb
- がん研究センター(biobank:2011)
- 循環器病研究センター(biobank:2011)
- 精神・神経医療研究センター(biobank:2011)
- 国際医療研究センター(biobank:?)
- 生育医療研究センター(biobank:?)
- 長寿医療研究センター(biobank:?)
海外:
-* dsmz
-* atcc
-* addgene
-* jackson lab
##TASK(1.1): 対象リソース名の決定:8機関からさらに十分なリソースリストが得られる機関に限定(未完)。
###TASK(1.1.1): RIKEN-BRC
- リソース
-- 対象: RIKEN BRC (利用者成果)
-- リソース名: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.rev
-- 検索ターム: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
- 機関名
-- 検索ターム: /BANK/Organiztion/RIKEN-BRC_2012/organization-name/org.name.only
###TASK(1.1.2): JCRB
- リソース
-- 対象: JCRB (オンラインカタログ)
-- リソース名: /BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv
-- 検索ターム: /BANK/BioResource/Organization/JCRB_2014/catalogue/All.name.sort.uniq.tsv.esc.rev
- 機関名
-- 検索ターム: /BANK/Organiztion/JCRB_2014/organization-name/org.name.only
###TASK(1.1.3): NITE-NBRC
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/NITE-NBRC_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/NITE-NBRC_2014/organization-name/org.name.only
###TASK(1.1.4): DSMZ
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/DSMZ_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/DSMZ_2014/organization-name/org.name.only
###TASK(1.1.5): WDCM
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/WDCM_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/WDCM_2014/organization-name/org.name.only
###TASK(1.1.6): ATCC
- リソース
-- 対象: 正規表現パターン
-- 検索ターム: /BANK/BioResource/Organization/ATCC_2014/catalogue/All.patt
- 機関名
-- 検索ターム: /BANK/Organization/ATCC_2014/organization-name/org.name.only



#TASK(5): 機関名候補検索 THEME[kaken-26540170]
#aff領域より得られた機関名(住所つき)をmaterial、ack領域に対して検索、存在を確認。
#所属をカンマで区切り、各フレーズを対象領域に対してマッチング。
#<tag1>,<tag2>,<tag3>
- 各ファイル:
-- 所属抽出結果: /BANK/PMC/20140724/elements/aff/PMC-AFF-v1.tsv
-- 所属抽出結果より不要なタグ等を取り除きユニークソート: /BANK/PMC/20140724/elements/aff/PMC-AFF-plain-v4
-- 上記データをカンマ区切りで切り出した第2カラムのデータ: /BANK/PMC/20140724/elements/aff/PMC-AFF-tag2
-- 上記各ファイルの解説: /BANK/PMC/20140724/elements/aff/README.Gmail(2015-03-14).pdf
##TASK(5.1): 謝辞 vs. 機関名候補検索
### 謝辞 vs. tag2 (石川氏)
- 検索ターム(機関名候補): /BANK/PMC/20140724/elements/aff/PMC-AFF-tag2
- 検索対象データ: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv (PMC-ACK-v6)
- 結果ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/aff/AFFvsACK/AFFvsACK.tsv
- 結果ファイル(0hit削除): /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/aff/AFFvsACK/AFFvsACK-del0.tsv
##TASK(5.2): material vs. 機関名候補検索



#TASK(3): 既知機関名の検索 THEME[kaken-26540170]
##TASK(3.1): aff領域より機関名検索(8機関)
### 1. aff エレメントの抽出(石川氏)
- 結果ファイル: /BANK/PMC/20140724/elements/aff/PMC-AFF-v1.tsv
### 2. 機関名(8機関)検索(石川氏)(20141225)
- 検索ターム: /BANK/Organization/_ALL_/organization-name/8orgs.name.terms
- 結果ファイル:  /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/aff/PMC-AFF-plain-10_ORG.txt
##TASK(3.2): ack領域より機関名検索
### 1. acknowledgement エレメントの抽出(石川氏)
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
### 2. 機関名検索
### 2.1 ack領域から5機関名を検索(天野)(完了)
cd /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/5orgs.name.only
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
- スクリプト:
 /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/exec_command/5orgs_in_ack.sh
 /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/exec_command/5org_extract_hit.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/5orgs_in_ack.hit
- PMID付きPMC-BRC利用者成果(118件) AND 結果: (30件) : /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/user-data/PMID/pmid_5orgs_AND_BRCuser_inACK
### 2.2 ack領域から8機関名を検索(石川氏)(20150306)
- 対象領域: /BANK/PMC/20140724/elements/acknowledgement/PMC-ACK-v6_pmid.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/8orgs.name.terms
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/acknowledgement/8orgs-OUTPUT

##TASK(3.3): material領域より機関名を検索(石川氏)(20150306)
- 対象領域: /BANK/PMC/20140724/elements/MERGED/Materials/au.merge-reg-material.cont.tsv
- 検索ターム: /BANK/Organization/_ALL_/organization-name/8orgs.name.terms
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/_ALL_/MERGED/Materials/OUTPUT2

##TASK(3.4): 全PMC-XMLより機関名を検索(20140801 完了)
###TASK(3.4.1) RIKEN-BRC :
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/RIKEN-BRC_2012/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.2) JCRB :
###既知機関名のリスト検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/JCRB_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.3): NITE-NBRC
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/NITE-NBRC_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.4): DSMZ
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/DSMZ_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.5): WDCM
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/WDCM_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
###TASK(3.4.6): ATCC
###既知機関名のリストの検索
- 既知機関名の検索
-- 検索ターム: /BANK/Organization/ATCC_2014/organization-name/org.name.only
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/
-- 検索コマンド:
/home/kamano/gitsrc/utility/match_position
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/match_pos_SynonOrgNames_Jour-au.sh
##===ここまで完了===##



#TASK(2): 既知リソース名検索:!!TASK(3)よりあとに行なう!!
##TASK(2.1): RIKEN-BRC
##THEME[リソース名共出現解析][kaken-26540170]
### 0. リソース名検索のためのリソース名 vs. リソース番号リストを作成する(NEW)
- 対象: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/riyousha_seika.2012.xls
- プログラム: Mathematica
- スクリプト: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/all.seika-matome.nb
- 検索ターム
-- Mus: リソース番号 + リソース名
-- Plt: リソース番号のみ
-- Cell: リソース番号 + リソース名
-- Mic: リソース番号のみ
-- DNA: リソース番号のみs
-- すべてまとめたファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name
-- ソートユニークエスケープした検索タームファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc
### 1. 検索(タグをKOしない:不採択)
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
-- 例: match_lines.pl sf=/BANK/PMC/20140724/elements/MERGED/Materials/au.merge-reg-material.cont.tsv qf=/BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc > res4
- スクリプト(1): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matchResNameLines_merge-reg-material.au.sh
- スクリプト(2)(20150226実行): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matchResNameLines_merge-reg-material.All.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/au.resName_merge-reg-material.cont.res
- 結果の加工(リソース名のみを抜き出す)
-- スクリプト: awk -F"<  >" '{print $2}' aa.resName_merge-reg-material.cont.res > aa.resNameOnly_merge-reg-material
-- すべてのファイルをまとめる: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matome_resNameOnly.sh
-- まとめ結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/All.resNameOnly_merge-reg-material
- 結果の加工(リソース名のみ、タブ区切り、最終的に欲しい形の結果): All.resNameOnly_merge-reg-material.tab
-- 上記の実行スクリプト: sed -e "s/^               //" All.resNameOnly_merge-reg-material > All.resNameOnly_merge-reg-material.tab
- 出現リソース名と対応する論文名のリスト
-- スクリプト: awk -F'   ' '{print $1"   "$2}' aa.resName_merge-reg-material.cont.res > aa.artName_merge-reg-material
-- スクリプト: matome_artNameOnly.sh
### 2. 検索(タグをKO:採択)
#### 2.0-a 検索ソースのタグをKO(スペース置き換え)
- プログラム: /home/kamano/gitsrc/XMLOP/tag-KO
- スクリプト:
cd /BANK/PMC/20140724/elements/MERGED/Materials
/home/kamano/gitsrc/XMLOP/tag-KO if=aa.merge-reg-material.cont.tsv > aa.merge-reg-material.cont.tsv.KO
#### 2.0-b 検索ソースのタグをKO(シュリンク)
#### <[^<>]*>のパターンを<数字>のパターンに変換。数字は<>を含めた文字数。
- プログラム(シュリンク): /home/kamano/gitsrc/XMLOP/shrink-tag.pl
- スクリプト(シュリンク): /home/kamano/gitsrc/XMLOP/shrink-tag.pl aa.merge-reg-material.cont.tsv > aa.merge-reg-material.cont.tsv.KO
- 結果: /BANK/PMC/20140724/elements/MERGED/Materials/aa.merge-reg-material.cont.tsv.KO
#### 2.1-b 検索(シュリンク)
- プログラム: /home/kamano/gitsrc/utility/match_lines.pl
- スクリプト(2): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/matchResNameLines_merge-reg-material.All-KO.sh
- 結果: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/aa.resName_merge-reg-material.cont.KO.res
- 結果(まとめ): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/All.resName_merge-reg-material.cont.KO.res
- 結果の加工(リソース名のみを抜き出す): awk -F"<  >" '{print $2}' All.resName_merge-reg-material.cont.KO.res | sed -e "s/^                //" > All.resNameOnly_merge-reg-material.cont.KO.res.tsv
### ===完了===

### old:1. リソース名検索
- 検索リソース名パターン作成:
-- 対象: 利用者成果
-- リソース名: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
-- 検索ターム: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 利用者成果よりタームを抽出: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
-- 正規表現検索用に予約文字をエスケープ:
escape_char sf=/BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv lf=/usr/local/var/perl_esc.list > /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc
ln -s /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name.sort.uniq.tsv.esc /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/All.name.sort.uniq.tsv.esc
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/match_pos_AllResNames_Jour-au.sh
###==========================
###===2014.07.30 1700 開始===
###===2014.08.02 1925 終了===
###==========================
### old:2. マテリアルメソッドセクションにあるか (新方式)(確認必要)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK)
#### -> 参照: TASK(extract.material) 1.
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
- プログラム: /home/kamano/gitsrc/XMLOP/elementPos_sec.pl
cd /BANK/PMC/20140724/elements/sec
/BANK/PMC/20140724/elements/sec/exec_command/sec_pos-au.sh
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
- プログラム: /home/kamano/gitsrc/XMLOP/region-sort_from_reg.pl
cd /BANK/PMC/20140724/elements/sec
for file in *reg; do  /home/kamano/gitsrc/XMLOP/region-sort_from_reg.pl $file > ${file}_sort; done
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/region-MMs_from_reg_sort.pl
cd /BANK/PMC/20140724/elements/sec
/home/kamano/gitsrc/XMLOP/region-MMs_from_reg_sort.pl sec_pos-au.reg_sort  | grep ^[^0-9] > sec_pos-au.reg-MMs
##### 新しい領域として、 sec_sort_pos-au.reg-Material  をつかう。
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
#### 2.2 (OLD) マテリアルメソッドセクションの領域とヒット領域を比較 
- プログラム: /home/kamano/gitsrc/XMLOP/check_res_sec-MMs.pl
 : ポジションでソートしているのでOK
cd /BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_commandcheck_Res_betSP_sec-MMs_Jour-aa.sh
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/exec_command/check_pos_MMs_AllResNames_Jour-au.sh
#### 2.3. チェック済み結果をカウント
#####THEME[リソース名共出現解析]
##### 2.3.0 チェック用ターム:
/BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
#####検索タームがリテラルでない場合、一旦検索結果からチェック用タームを作る。
##### 2.3.1 インデックス付き行列 (不要)
##### 2.3.2 カウントスパース行列(matlab形式)を直接出力
#####インデックスは1からスタート
- プログラム(試験中): /home/kamano/gitsrc/XMLOP/count_Res_in_Art.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012
/home/kamano/gitsrc/XMLOP/count_Res_in_Art.pl rf=/BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv  hf=/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/match_pos_AllResNames_Jour-au.res.inMMs > count_AllResNames_Jour-au.res.inMMs
##### 2.3.3 カウントスパース行列　から　ヒットスパース行列へ
- プログラム: /home/kamano/gitsrc/utility/SP_count2hit.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012
for file in count*; do  /home/kamano/gitsrc/utility/SP_count2hit.pl $file > hit${file#count}; done
#### 2.4. インデックス付き行列 -> 数値のみ行列 (不要)
####逐次一括処理
#### 2.5. 数値行列のゼロ要素以外を1に置換 (1 articleにおける共起を1とカウントするため)(不要)
#### 2.6. 数値行列をスパース形式に変換 (不要)
##### 2.6.1 Mathematicaスパース形式
- プログラム: /home/kamano/gitsrc/utility/mk_MMA-SPA_from_numtable.pl
#####インデックスはmatlab用に1からスタート
##### 2.6.2 Matlab data 形式 (読み込んだ後にさらに変換が必要)
- プログラム: /home/kamano/gitsrc/utility/mk_MatlabSparse_from_numtable.pl
#####逐次一括処理(遅い)
for file in count_pos_MMs_AllResNames-U_Jour-a*.res.numonly; do  /home/kamano/gitsrc/utility/mk_MatlabSparse_from_numtable.pl $file > $file.sptbl; done
##### 2.6.3 Matrix Market 形式
- プログラム: /home/kamano/gitsrc/utility/mk_MatMarket_from_numtable.pl
#### 2.7. カウント
- ツール: matlab
##### 2.7.1 ヒットファイルを読み込むと同時にスパース配列に変換、一つの行列に連結。
>> cd('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/')
>> files = (dir('hit*'))
>> for i=1:length(files); SpCount{i}=spconvert(load(files(i).name)); end
>> SpCountCat=vertcat(SpCount{:});
###### 2.7.1.1 リソースネームの総出現数カウントの結果ファイル(csv)
>> SpCountCatSumRes=sum(SpCountCat);
>> CountCatSumRes=full(SpCountCatSumRes);
>> csvwrite('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/resource-count_AllResNames.inMMs.csv',CountCatSumRes)
- ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/resource-count_AllResNames.inMMs.csv
- 対応するリソース名ファイル: /BANK/BioResource/Organization/RIKEN-BRC_2012/cited-resource/ALL.name.sort.uniq.tsv
- 対応するリソース名ファイル(グループタグ付き): /BANK/BioResource/Organization/RIKEN-BRC_2012/RAW_cited-resource/All.name_group_org.sort.uniq.tsv
###### 2.7.1.2 articleの総出現数カウントの結果ファイル(csv)
>> TrSpCountCat = transpose(SpCountCat);
>> TrSpCountCatSum = sum(TrSpCountCat);
>> TrCountCatSum = full(TrSpCountCatSum);
>> csvwrite('/BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/article-count_AllResNames.inMMs.csv',TrCountCatSum)
- ファイル: /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/article-count_AllResNames.inMMs.csv
- 対応するarticle名ファイル(複数): /BANK/PMC/20140724/Matching/BioResource/Organization/RIKEN-BRC_2012/match_pos_AllResNames_Jour-a[a-u].res.inMMs
###===ここまで完了===
#### 2.8. リソース名(term)がマッチした箇所とファイル名の情報(1.)をRDBMSに入れる。リソース名から検索してファイル名と箇所を探せるように。(検討中)
####DB start
pg_ctl start -D /BANK/pgsql
####DB connect
psql term_region
##### 2.8.1 対象ファイル
/BANK/PMC/20130909/Matching/BioResource_AND_Organization/RIKEN-BRC_2012/check_Res_betSP_sec-MMs_Jour-[A-Z].res
##### 2.8.2 テーブル構造
DB:<term_region>:
Table0:<elementname>: <elementname> <annotation>
Table1:<region_type>: <region_type> <annotation> <element> #ex. tag, content ... 
Table2:<region_type_property>: <region_type> <property_target> <property_valur>
#####<region_type>は、region_type.region_typeのプロパティ付与。複数の<region_type_atom>のプロパティが付与されると、region_type.complex_or_single はcomplex。
#####<region_type_atom>は、少なくともその条件を満たしている。
Table4:<element_region>: <filename> <resourcename> <region_type> <region_start> <region_end>
Table5:<resourcename_region>: <filename> <resourcename> <region_type> <region_start> <region_end>
Table6:<organizationname_region>: <filename> <organizationname> <region_type> <region_start> <region_end>
Table7:<affriationname_region>: <filename> <affriationname> <region_type> <region_start> <region_end>
Table8:<...>: ... 

##TASK(2.2): JCRB (検索完了、チェック完了)
##THEME[kaken-26540170]
### 1. リソース名検索
- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
- method: match_position_ex_RE.pl コマンドを使用
cd /BANK/PMC/20140724/articles.fname/20
split -l 33216 Jour-All.fname Jour-split.
- コマンドフロー:
-- タームの検索
--- カタログよりリソース名とリソース番号を得る: /BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv
--- 正規表現検索用に予約文字をスケープ:
escape_char sf=/BANK/BioResource/Organization/JCRB_2014/RAW_catalogue/All.name.sort.uniq.tsv lf=/usr/local/var/perl_esc.list > All.name.sort.uniq.tsv.esc
/BANK/BioResource/Organization/JCRB_2014/catalogue/All.name.sort.uniq.tsv.esc
---  検索
---- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140804 1400 開始===
###===20140806 0743 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK ->  前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/JCRB_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===
### 3. チェック済み結果をカウント
###THEME[リソース名共出現解析]
#### 3.0 チェック用ターム: All.name.sort.uniq.tsv
####検索タームがリテラルでない場合、一旦検索結果からチェック用タームを作る。
#### 3.1 インデックス付き行列
- プログラム: /BANK/BioResource/bin/count_Res-Art_in_check.pl
cd /BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/exec_command/count_pos_MMs_AllResNames_Jour-aa.sh
/BANK/PMC/20130909/Matching/BioResource/Organization/RIKEN-BRC_2012/analisys/count/exec_command/count_pos_MMs_AllResNames-U_Jour-aa.sh

##TASK(2.3): NITE-NBRC(検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/NITE-NBRC_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140808 1833 開始===
###===20140808 1942 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/NITE-NBRC_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===

##TASK(2.4): DSMZ (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/DSMZ_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===20140811 1014 開始===
###===20140811 1029 終了===
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 (完了)
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/DSMZ_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===

##TASK(2.5): WDCM (対象外)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
###ヒットしない -> データセンターなので、直接提供していない?
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/WDCM_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/WDCM_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===n007 : 実行中========
###===20140815 1140 開始===
###===20140815 1230 終了===
###===ヒットなし===========
###========================
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 

##TASK(2.6): ATCC (検索完了、チェック完了)
##THEME[リソース名共出現解析][kaken-26540170]
### 1. リソース名検索
###ヒットしない -> データセンターなので、直接提供していない?
- 検索リソース名パターン作成: -> 検索ターム
-- 対象: カタログIDパターン
-- リソース名: 
-- 検索ターム: /BANK/BioResource/Organization/ATCC_2014/catalogue/All.patt
-- 条件・範囲: リソース名の両側のスペース、カンマ、ブラケットを考慮してXML全体を検索、のちにpositionをもとに materials|methods 内の範囲に絞る。 
-- method: match_position_ex_RE.pl コマンドを使用
- コマンドフロー:
-- 検索
--- プログラム: /home/kamano/gitsrc/utility/match_position_ex_RE.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/match_pos_AllResNames_Jour-au.sh
###========================
###===n003 : 実行==========
###===20140815 1313 開始===
###===20140815 1330 終了===
###========================
###===n007に転送===
### 2. マテリアルメソッドセクションにあるか (新方式)
#### 2.1 マテリアルメソッドセクションの領域を抽出 (1回やればOK -> 前TASKで完了)
##### 2.1.1 <sec>タグ領域を抽出 (NEW) (完了)
##### 2.1.2 抽出された<sec>タグ領域 を sort (NEW) (完了)
##### 2.1.3 sort済みの抽出された<sec>タグ領域file　から　マテリアルメソッドセクションの領域を抽出 (NEW) (完了)
#### 2.2 (NEW) マテリアルメソッドセクションの領域とヒット領域を比較 
- プログラム(試用): /home/kamano/gitsrc/XMLOP/check-region_from_pos.pl
cd /BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command
/BANK/PMC/20140724/Matching/BioResource/Organization/ATCC_2014/exec_command/check_pos_AllResNames_Jour-au_inMMs.sh
###===ここまで完了===





#TASK(4): XMLの分解 - バイオリソース名候補抜きだし
#量が多いので分割したものをsort-count、すべてのsort-countをmerge-sort-count
## 1. ALL: KOなし (2ワードフレーズまで完了)
### 1.1 single word (完了)
#### 1.1.1 切り出し
- プログラム: /home/kamano/gitsrc/utility/extract_Word.pl
cd /BANK/PMC/20140724/terms/whole/exec_command
/BANK/PMC/20140724/terms/whole/exec_command/extract_1W_Jour-au.sh
#### 1.1.2 sort uniq count
cd /BANK/PMC/20140724/terms/whole
sort Word_Jour-au | uniq -c > Word_Jour-au.sort.uniq
#### 1.1.3 total count
##### 1.1.3.1 count済みを次のmerge-sortのためにさらに整形
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
cd /BANK/PMC/20140724/terms/whole
for file in W*uniq; do /home/kamano/gitsrc/utility/rep4count.pl $file > $file.rep; done
##### 1.1.3.2 整形したものをmerge-sort
cd /BANK/PMC/20140724/terms/whole
cat Word*.sort.uniq.rep | sort -t ' ' -k2 > Word_Jour-All.merge
##### 1.1.3.3 sort-merge-sortをcount
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
cd /BANK/PMC/20140724/terms/whole
/home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl Word_Jour-All.merge > Word_Jour-All.merge.count
### 1.2 two-words-phrase (完了)
#### 1.2.1 切り出し
- プログラム: /home/kamano/gitsrc/utility/extract_phrase2W.pl
cd /BANK/PMC/20140724/terms/whole
/BANK/PMC/20140724/terms/whole/exec_command/extract_2W_Jour-au.sh
#### 1.2.2 sort uniq count
cd /BANK/PMC/20140724/terms/whole
sort phrase-2W_Jour-au | uniq -c > phrase-2W_Jour-au.sort.uniq
/BANK/PMC/20140724/terms/whole/exec_command/sort-uniq_All.sh
#### 1.2.3 total count
##### 1.2.3.1 count済みを次のmerge-sortのためにさらに整形
- プログラム: /home/kamano/gitsrc/utility/rep4count.pl
cd /BANK/PMC/20140724/terms/whole
for file in p*uniq; do /home/kamano/gitsrc/utility/rep4count.pl $file > $file.rep; done
##### 1.2.3.2 整形したものをmerge-sort
cd /BANK/PMC/20140724/terms/whole
cat *2W_Jour*.sort.uniq.rep | sort -t '	' -k2 -k3 > phrase-2W_Jour-All.merge
##### 1.2.3.3 sort-merge-sortをcount
- プログラム: /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl
cd /BANK/PMC/20140724/terms/whole
/home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl phrase-2W_Jour-All.merge > phrase-2W_Jour-All.merge.count
##===ここまで完了===
## 2. body
## 3. acknowledgement
## 4. MERGED/Materials: KOSP タグをスペースにKO
## patt.3 と patt.5 で実行
### 4.1 タグをKO、スペースに
- スクリプト:
cd /BANK/PMC/20140724/elements/MERGED/Materials
for file in *KO; do  /home/kamano/gitsrc/XMLOP/tag-KOSP.pl $file >  ${file}SP; done
### 4.2 ヘッダ情報を削除
for file in *KOSP; do awk -F'  '  '{for(i=3;i<=NF;i++){printf("%s ",$i)}}' $file > $file.drophead; done
### 4.3 termをsplit
- スクリプト: /BANK/PMC/20140724/terms/MERGED/Materials/patt.3/exec_command/split_Word.au.sh
### 4.4 それぞれのファイルをソート/ユニーク/カウント
- スクリプト: /BANK/PMC/20140724/terms/MERGED/Materials/patt.3/exec_command/sort_each.ALL.sh
### 4.5 全体をソート/ユニーク/カウントするための前処理
- スクリプト:
cd /BANK/PMC/20140724/terms/MERGED/Materials/patt.3
cat *sort.uniq | /home/kamano/gitsrc/utility/rep4count.pl | sort -t '     ' -k2 > Word.ALL.presort
### 4.6 前処理をマージカウント処理
- スクリプト:
cd /BANK/PMC/20140724/terms/MERGED/Materials/patt.3
 /home/kamano/gitsrc/utility/sum_count_from_mixed_sort.pl Word.ALL.presort > Word.ALL.sort.count
### ===完了=== 



#TASK(6): 既知機関名vs.既知リソース名対の決定
#THEME[kaken-26540170]
##DB作成

